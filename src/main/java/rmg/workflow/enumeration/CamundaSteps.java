package rmg.workflow.enumeration;

import lombok.Getter;
import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
@Getter
public enum CamundaSteps {

    // risk steps
    OWNER_RISK_ANALYSIS("OWNER_RISK_ANALYSIS"),
    MANAGER_RISK_ANALYSIS("MANAGER_RISK_ANALYSIS"),
    EXECUTIVE_DIRECTOR_RISK_ANALYSIS("EXECUTIVE_DIRECTOR_RISK_ANALYSIS"),
    OWNER_RESPONDING_TO_RISK("OWNER_RESPONDING_TO_RISK"),
    MANAGER_RESPONDING_TO_RISK("MANAGER_RESPONDING_TO_RISK"),
    OWNER_REVIEW_AND_MONITORING("OWNER_REVIEW_AND_MONITORING"),
    MANAGER_REVIEW_AND_MONITORING("MANAGER_REVIEW_AND_MONITORING"),
    OWNER_REDUCTION("OWNER_REDUCTION"),
    OWNER_CLOSE_DANGER("OWNER_CLOSE_DANGER"),
    MANAGER_CLOSE_DANGER("MANAGER_CLOSE_DANGER"),
    CONSTANT_DANGER("CONSTANT_DANGER"),
    CLOSED_DANGER("CLOSED_DANGER"),
    RISK_REJECTION("RISK_REJECTION"),
    INIT_RISK("INIT_RISK"),

    // risk decrease plan steps
    INIT_REDUCTION_PLAN("INIT_REDUCTION_PLAN"),
    MANAGER_RISK_REDUCTION_PLAN("MANAGER_RISK_REDUCTION_PLAN"),
    OWNER_RISK_REDUCTION_PLAN("OWNER_RISK_REDUCTION_PLAN"),
    EXECUTIVE_DIRECTOR_RISK_PLAN_CLOSER_REQUEST("EXECUTIVE_DIRECTOR_RISK_PLAN_CLOSER_REQUEST"),
    MANAGER_RISK_PLAN_CLOSER_REQUEST("MANAGER_RISK_PLAN_CLOSER_REQUEST"),
    RISK_REDUCTION_PLAN_CLOSED("RISK_REDUCTION_PLAN_CLOSED"),
    ;

    private final String value;
}
